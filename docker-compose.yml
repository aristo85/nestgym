version: "3.6"

services:
  db:
    container_name: postgres
    image: postgres:alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: getcoach_api
      POSTGRES_USER: getcoach_api
      POSTGRES_DB: getcoach_api
    ports:
      - 5432:5432
    restart: always

  getcoachapi:
    container_name: getcoachapi
    build: .
    command: npm start
    volumes:
     - ./:/usr/src/app
      - /usr/src/app/node_modules
    expose:
      - 3000
    env_file:
      - ./.env
    depends_on:
      - db

  getcoachadmin:
    container_name: getcoachadmin
    build: ./getcoachadmin
    command: npm run start
    volumes:
      - ./getcoachadmin:/app
      - /app/node_modules
      - adminbuild:/app/build
    ports:
      - 6000:6000
    restart: always

  nginx:
    build: ./nginx
    container_name: nginx
    volumes:
      - adminbuild:/app/adminbuild
      - static_volume:/app/static/
      - uploads_volume:/app/uploads/
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - getcoachapi
      - getcoachadmin
    env_file:
      - .env
    command: /bin/sh -c "envsubst '$$DOMAIN_NAME $$PRERENDER_IO_TOKEN' < /etc/nginx/nginx.conf.template > /etc/nginx/conf.d/nginx.conf; while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\""
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: always

volumes:
  postgres_data:
  static_volume:
  uploads_volume:
  adminbuild:
